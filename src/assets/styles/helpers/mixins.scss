// Fonts generator
@mixin font-face($name, $path, $weight: normal, $style: normal, $exts: woff2 woff) {
    $src: null;
    $extmods: (eot: "?", svg: "#"+ str-replace($name, " ", "_"));
    $formats: (otf: "opentype", ttf: "truetype");

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src;
    }
}

// Inline-block
@mixin inlineblock ($value: top) {
    display: inline-block;
    vertical-align: $value;
}

// Absolute centered
@mixin center {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
    margin: auto;
}

// Clearfix
@mixin clearfix {

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

// Color placeholder
@mixin placeholder($text-indent,
$transition: .2s,
$font: 14px,
$color: #c7c6c6) {
    &::-webkit-input-placeholder {
        color: $color;
        font-size: $font;
        text-indent: $text-indent;
        @include transition($transition);
    }

    &:-moz-placeholder {
        color: $color;
        font-size: $font;
        text-indent: $text-indent;
        @include transition($transition);
    }

    &::-moz-placeholder {
        color: $color;
        font-size: $font;
        text-indent: $text-indent;
        @include transition($transition);
    }

    &:-ms-input-placeholder {
        color: $color;
        font-size: $font;
        text-indent: $text-indent;
        @include transition($transition);
    }
}

@mixin transformPos ($axis: "both") {
    position: absolute;

    @if $axis=="y" {
        top: 50%;
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    @if $axis=="x" {
        left: 50%;
        -webkit-transform: translateX(-50%);
        transform: translateX(-50%);
    }

    @if $axis=="both" {
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }
}

// Media queries max-width
@mixin mediaMax($max-width: 1200px) {
    @media (max-width: $max-width) {
        @content;
    }
}

// Media queries min-width
@mixin media($min-width: 1200px) {
    @media (min-width: $min-width) {
        @content;
    }
}

// Media queries mix
@mixin mediaMix($min-width: 768px,
$max-width: 1200px) {
    @media (min-width: $min-width) and (max-width: $max-width) {
        @content;
    }
}